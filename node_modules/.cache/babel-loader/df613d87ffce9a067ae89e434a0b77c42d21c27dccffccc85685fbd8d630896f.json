{"ast":null,"code":"var _jsxFileName = \"/Users/friizi/Documents/Project/node/secret-birthday/react/src/components/PublicPage.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport { Card } from \"primereact/card\";\nimport { Button } from \"primereact/button\";\nimport { classNames } from \"primereact/utils\";\nimport { RankingProvider, useRanking } from \"./RankingContext\";\nimport \"./PublicPage.css\";\nimport secretStoryLogo from \"./images/Secret_Story_Logo.png\";\n// Importez les images des participants\n// import participant1Image from \"./images/profile/participant1.png\";\n// Importez les autres images des participants ici\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PublicPage = () => {\n  _s();\n  const {\n    rankings,\n    loading\n  } = useRanking();\n  const renderPlace = rowData => {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"circle-pink\",\n      children: rowData.place\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  };\n\n  // Fonction pour générer l'URL de l'image du participant en fonction de son nom\n  const getParticipantImageUrl = participantName => {\n    // Convertir le nom du participant en minuscules et remplacer les espaces par des tirets bas\n    const imageName = participantName.toLowerCase().replace(/ /g, \"_\") + \".png\";\n\n    // Retourner l'URL complète de l'image en utilisant le chemin du répertoire public\n    return process.env.PUBLIC_URL + `/${imageName}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"public-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: secretStoryLogo,\n      alt: \"Logo Secret Story\",\n      className: \"logo\",\n      style: {\n        width: \"300px\",\n        height: \"auto\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"card\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(DataTable, {\n        value: rankings,\n        className: \"datatable\",\n        stripedRows: true,\n        children: [/*#__PURE__*/_jsxDEV(Column, {\n          header: \"#\",\n          headerStyle: {\n            width: \"3rem\"\n          },\n          body: (data, options) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"circle-pink\",\n            children: options.rowIndex + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          field: \"nom\",\n          header: \"Nom du participant\",\n          body: rowData => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: getParticipantImageUrl(rowData.nom),\n              alt: rowData.nom,\n              className: \"participant-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 19\n            }, this), rowData.nom]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          field: \"cagnotte\",\n          header: \"Cagnotte\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      label: \"Actualiser le classement\",\n      icon: \"pi pi-refresh\",\n      className: classNames(\"refresh-button\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(PublicPage, \"VoVlWTsHIZlFaxxfefNHhOEkyh4=\", false, function () {\n  return [useRanking];\n});\n_c = PublicPage;\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(RankingProvider, {\n    children: /*#__PURE__*/_jsxDEV(PublicPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"PublicPage\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","DataTable","Column","Card","Button","classNames","RankingProvider","useRanking","secretStoryLogo","jsxDEV","_jsxDEV","Fragment","_Fragment","PublicPage","_s","rankings","loading","renderPlace","rowData","className","children","place","fileName","_jsxFileName","lineNumber","columnNumber","getParticipantImageUrl","participantName","imageName","toLowerCase","replace","process","env","PUBLIC_URL","src","alt","style","width","height","value","stripedRows","header","headerStyle","body","data","options","rowIndex","field","nom","label","icon","_c","App","_c2","$RefreshReg$"],"sources":["/Users/friizi/Documents/Project/node/secret-birthday/react/src/components/PublicPage.js"],"sourcesContent":["import React from \"react\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport { Card } from \"primereact/card\";\nimport { Button } from \"primereact/button\";\nimport { classNames } from \"primereact/utils\";\nimport { RankingProvider, useRanking } from \"./RankingContext\";\nimport \"./PublicPage.css\";\nimport secretStoryLogo from \"./images/Secret_Story_Logo.png\";\n// Importez les images des participants\n// import participant1Image from \"./images/profile/participant1.png\";\n// Importez les autres images des participants ici\n\nconst PublicPage = () => {\n  const { rankings, loading } = useRanking();\n\n  const renderPlace = (rowData) => {\n    return <span className=\"circle-pink\">{rowData.place}</span>;\n  };\n\n  // Fonction pour générer l'URL de l'image du participant en fonction de son nom\n  const getParticipantImageUrl = (participantName) => {\n    // Convertir le nom du participant en minuscules et remplacer les espaces par des tirets bas\n    const imageName = participantName.toLowerCase().replace(/ /g, \"_\") + \".png\";\n\n    // Retourner l'URL complète de l'image en utilisant le chemin du répertoire public\n    return process.env.PUBLIC_URL + `/${imageName}`;\n  };\n\n  return (\n    <div className=\"public-page\">\n      <img\n        src={secretStoryLogo}\n        alt=\"Logo Secret Story\"\n        className=\"logo\"\n        style={{ width: \"300px\", height: \"auto\" }}\n      />\n      <Card className=\"card\">\n        {loading ? (\n          <div>Loading...</div>\n        ) : (\n          <DataTable value={rankings} className=\"datatable\" stripedRows>\n            <Column\n              header=\"#\"\n              headerStyle={{ width: \"3rem\" }}\n              body={(data, options) => (\n                <span className=\"circle-pink\">{options.rowIndex + 1}</span>\n              )}\n            />\n            <Column\n              field=\"nom\"\n              header=\"Nom du participant\"\n              body={(rowData) => (\n                <>\n                  <img\n                    src={getParticipantImageUrl(rowData.nom)}\n                    alt={rowData.nom}\n                    className=\"participant-image\"\n                  />\n                  {rowData.nom}\n                </>\n              )}\n            />\n            <Column field=\"cagnotte\" header=\"Cagnotte\" />\n          </DataTable>\n        )}\n      </Card>\n      <Button\n        label=\"Actualiser le classement\"\n        icon=\"pi pi-refresh\"\n        className={classNames(\"refresh-button\")}\n      />\n    </div>\n  );\n};\n\nconst App = () => {\n  return (\n    <RankingProvider>\n      <PublicPage />\n    </RankingProvider>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}