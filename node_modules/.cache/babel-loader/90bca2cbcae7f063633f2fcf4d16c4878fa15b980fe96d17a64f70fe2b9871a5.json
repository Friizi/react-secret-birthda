{"ast":null,"code":"var _jsxFileName = \"/Users/friizi/Documents/Project/node/secret-birthday/react/src/components/SecretPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport { Card } from \"primereact/card\";\nimport { Button } from \"primereact/button\";\nimport { classNames } from \"primereact/utils\";\nimport { RankingProvider, useRanking } from \"./RankingContext\";\nimport Menu from \"./Menu\";\nimport \"./PublicPage.css\";\nimport secretStoryLogo from \"./images/Secret_Story_Logo.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SecretPage = () => {\n  _s();\n  const {\n    rankings,\n    loading\n  } = useRanking();\n  const [randomizedRankings, setRandomizedRankings] = useState([]);\n  const [showFilteredRankings, setShowFilteredRankings] = useState(false);\n  useEffect(() => {\n    if (!loading) {\n      const shuffledRankings = [...rankings];\n      shuffledRankings.sort(() => Math.random() - 0.5);\n      setRandomizedRankings(shuffledRankings);\n    }\n  }, [loading, rankings]);\n\n  // Filtrer les lignes avec show === 1 si nécessaire\n  const filteredRankings = showFilteredRankings ? randomizedRankings.filter(rowData => rowData.show === 1) : randomizedRankings;\n  const handleRefreshClick = () => {\n    // Rafraîchir le tableau avec un nouveau tri aléatoire\n    const shuffledRankings = [...rankings];\n    shuffledRankings.sort(() => Math.random() - 0.5);\n    setRandomizedRankings(shuffledRankings);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"public-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: secretStoryLogo,\n      alt: \"Logo Secret Story\",\n      className: \"logo\",\n      style: {\n        width: \"300px\",\n        height: \"auto\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"refresh-button-container\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          label: \"Actualiser le classement\",\n          icon: \"pi pi-refresh\",\n          className: classNames(\"refresh-button\"),\n          onClick: handleRefreshClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(DataTable, {\n        value: filteredRankings // Utiliser le tableau filtré ou non filtré en fonction de showFilteredRankings\n        ,\n        className: \"datatable responsive-datatable\",\n        stripedRows: true,\n        children: /*#__PURE__*/_jsxDEV(Column, {\n          field: \"secret\",\n          header: \"SECRET\",\n          body: rowData => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: classNames(\"secret-text\", {\n              \"secret-text-crossed\": rowData.find === 1\n            }),\n            children: rowData.secret\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this),\n          style: {\n            textAlign: \"center\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(SecretPage, \"6/J48n4dCWGF3u7dPNkLuhzpALI=\", false, function () {\n  return [useRanking];\n});\n_c = SecretPage;\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(RankingProvider, {\n    children: /*#__PURE__*/_jsxDEV(SecretPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"SecretPage\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useEffect","useState","DataTable","Column","Card","Button","classNames","RankingProvider","useRanking","Menu","secretStoryLogo","jsxDEV","_jsxDEV","SecretPage","_s","rankings","loading","randomizedRankings","setRandomizedRankings","showFilteredRankings","setShowFilteredRankings","shuffledRankings","sort","Math","random","filteredRankings","filter","rowData","show","handleRefreshClick","className","children","src","alt","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","label","icon","onClick","value","stripedRows","field","header","body","find","secret","textAlign","_c","App","_c2","$RefreshReg$"],"sources":["/Users/friizi/Documents/Project/node/secret-birthday/react/src/components/SecretPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport { Card } from \"primereact/card\";\nimport { Button } from \"primereact/button\";\nimport { classNames } from \"primereact/utils\";\nimport { RankingProvider, useRanking } from \"./RankingContext\";\nimport Menu from \"./Menu\";\nimport \"./PublicPage.css\";\nimport secretStoryLogo from \"./images/Secret_Story_Logo.png\";\n\nconst SecretPage = () => {\n  const { rankings, loading } = useRanking();\n  const [randomizedRankings, setRandomizedRankings] = useState([]);\n  const [showFilteredRankings, setShowFilteredRankings] = useState(false);\n\n  useEffect(() => {\n    if (!loading) {\n      const shuffledRankings = [...rankings];\n      shuffledRankings.sort(() => Math.random() - 0.5);\n      setRandomizedRankings(shuffledRankings);\n    }\n  }, [loading, rankings]);\n\n  // Filtrer les lignes avec show === 1 si nécessaire\n  const filteredRankings = showFilteredRankings\n    ? randomizedRankings.filter((rowData) => rowData.show === 1)\n    : randomizedRankings;\n\n  const handleRefreshClick = () => {\n    // Rafraîchir le tableau avec un nouveau tri aléatoire\n    const shuffledRankings = [...rankings];\n    shuffledRankings.sort(() => Math.random() - 0.5);\n    setRandomizedRankings(shuffledRankings);\n  };\n\n  return (\n    <div className=\"public-page\">\n      <img\n        src={secretStoryLogo}\n        alt=\"Logo Secret Story\"\n        className=\"logo\"\n        style={{ width: \"300px\", height: \"auto\" }}\n      />\n      <Card className=\"card\">\n        <Menu />\n        <div className=\"refresh-button-container\">\n          <Button\n            label=\"Actualiser le classement\"\n            icon=\"pi pi-refresh\"\n            className={classNames(\"refresh-button\")}\n            onClick={handleRefreshClick}\n          />\n        </div>\n        {loading ? (\n          <div>Loading...</div>\n        ) : (\n          <DataTable\n            value={filteredRankings} // Utiliser le tableau filtré ou non filtré en fonction de showFilteredRankings\n            className=\"datatable responsive-datatable\"\n            stripedRows\n          >\n            <Column\n              field=\"secret\"\n              header=\"SECRET\"\n              body={(rowData) => (\n                <span\n                  className={classNames(\"secret-text\", {\n                    \"secret-text-crossed\": rowData.find === 1,\n                  })}\n                >\n                  {rowData.secret}\n                </span>\n              )}\n              style={{ textAlign: \"center\" }}\n            />\n          </DataTable>\n        )}\n      </Card>\n    </div>\n  );\n};\n\nconst App = () => {\n  return (\n    <RankingProvider>\n      <SecretPage />\n    </RankingProvider>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}